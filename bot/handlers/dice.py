import random
import re
from core import utils

def roll(vk, event, args):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –±—Ä–æ—Å–æ–∫ –∫—É–±–∏–∫–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ NdM[+/-]K.
    –ü—Ä–∏–º–µ—Ä: 1d100, 2d6+5, 5d20-3
    """
    if not args:
        utils.send_message(vk, event.peer_id, "üé≤ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ, –∫–∞–∫–∏–µ –∫–æ—Å—Ç–∏ –±—Ä–æ—Å–∏—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'sdp roll 2d6+3').")
        return

    roll_str = "".join(args).lower()
    
    # –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å—Ç—Ä–æ–∫–∏ –±—Ä–æ—Å–∫–∞
    match = re.match(r'^(?P<num>\d*)d(?P<sides>\d+)(?P<mod_op>[+-])?(?P<mod_val>\d+)?$', roll_str)

    if not match:
        utils.send_message(vk, event.peer_id, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –±—Ä–æ—Å–∫–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç NdM+K (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2d6-3).")
        return

    data = match.groupdict()
    
    num_dice = int(data['num']) if data['num'] else 1
    sides = int(data['sides'])
    modifier = 0
    if data['mod_op'] and data['mod_val']:
        modifier = int(data['mod_op'] + data['mod_val'])

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–µ–∫–≤–∞—Ç–Ω–æ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–π
    if num_dice > 1000000 or sides > 1000000:
        utils.send_message(vk, event.peer_id, "‚úã –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∫—É–±–∏–∫–æ–≤ –∏–ª–∏ –≥—Ä–∞–Ω–µ–π. –ú–∞–∫—Å–∏–º—É–º: 100d1000.")
        return

    # –ë—Ä–æ—Å–∞–µ–º –∫—É–±–∏–∫–∏
    rolls = [random.randint(1, sides) for _ in range(num_dice)]
    total = sum(rolls) + modifier

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤—ã–π –æ—Ç–≤–µ—Ç
    rolls_str = f"[{', '.join(map(str, rolls))}]"
    mod_str = ""
    if modifier > 0:
        mod_str = f" + {modifier}"
    elif modifier < 0:
        mod_str = f" - {abs(modifier)}"

    result_message = f"üé≤ –ë—Ä–æ—Å–æ–∫ {roll_str}:\n{rolls_str}{mod_str} = {total}"

    try:
        utils.send_message(vk, event.peer_id, result_message)
    except Exception as e:
        error_message = f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {e}"
        utils.send_message(vk, event.peer_id, error_message)
