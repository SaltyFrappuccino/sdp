import logging
import time
from typing import Dict, Set
import vk_api
from core.utils import get_random_id, send_message
from database import get_or_create_user

# –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π
# {peer_id: {target_user_id: {'initiator': user_id, 'votes_for': set(), 'votes_against': set(), 'timestamp': time, 'message_id': int}}}
ACTIVE_VOTES: Dict[int, Dict[int, Dict]] = {}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
VOTE_DURATION = 30  # 30 —Å–µ–∫—É–Ω–¥ –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∞
VOTES_REQUIRED_PERCENTAGE = 0.6  # 60% –≥–æ–ª–æ—Å–æ–≤ "–∑–∞" –¥–ª—è –±–∞–Ω–∞
MIN_VOTES = 3  # –ú–∏–Ω–∏–º—É–º 3 –≥–æ–ª–æ—Å–∞ "–∑–∞" –¥–ª—è –±–∞–Ω–∞

# ID —Ä–µ–∞–∫—Ü–∏–π VK - –±—É–¥—É—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
REACTION_LIKE = None  # üëç - –±—É–¥–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ —á–µ—Ä–µ–∑ API
REACTION_DISLIKE = None  # üëé - –±—É–¥–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ —á–µ—Ä–µ–∑ API
REACTIONS_INITIALIZED = False

def init_reactions(vk):
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç ID —Ä–µ–∞–∫—Ü–∏–π —á–µ—Ä–µ–∑ VK API.
    –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏.
    """
    global REACTION_LIKE, REACTION_DISLIKE, REACTIONS_INITIALIZED
    
    if REACTIONS_INITIALIZED:
        return
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ–∞–∫—Ü–∏–π
        assets = vk.messages.getReactionsAssets()
        reaction_ids = assets.get('reaction_ids', [])
        
        logging.info(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏ VK: {reaction_ids}")
        
        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—ã–µ –¥–≤–µ —Ä–µ–∞–∫—Ü–∏–∏
        # –û–±—ã—á–Ω–æ —ç—Ç–æ –ª–∞–π–∫ (1) –∏ –¥–∏–∑–ª–∞–π–∫ (2), –Ω–æ –ª—É—á—à–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å
        if len(reaction_ids) >= 2:
            REACTION_LIKE = reaction_ids[0]  # –û–±—ã—á–Ω–æ —ç—Ç–æ "‚ù§Ô∏è" –∏–ª–∏ "üëç"
            REACTION_DISLIKE = reaction_ids[1] if len(reaction_ids) > 1 else reaction_ids[0]
        else:
            # –§–æ–ª–ª–±—ç–∫ –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
            REACTION_LIKE = 1
            REACTION_DISLIKE = 2
        
        REACTIONS_INITIALIZED = True
        logging.info(f"–†–µ–∞–∫—Ü–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã: LIKE={REACTION_LIKE}, DISLIKE={REACTION_DISLIKE}")
    except Exception as e:
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–µ–∞–∫—Ü–∏–π: {e}")
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        REACTION_LIKE = 1
        REACTION_DISLIKE = 2
        REACTIONS_INITIALIZED = True


def get_message_reactions(vk, peer_id, conversation_message_id):
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ API.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å {user_id: reaction_id}
    """
    try:
        result = vk.messages.getMessagesReactions(
            peer_id=peer_id,
            cmids=conversation_message_id
        )
        
        reactions = {}
        if result and 'items' in result:
            for item in result['items']:
                if 'reactions' in item:
                    for reaction in item['reactions']:
                        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —ç—Ç–æ–π —Ä–µ–∞–∫—Ü–∏–µ–π
                        user_ids = reaction.get('user_ids', [])
                        reaction_id = reaction.get('reaction_id')
                        
                        for uid in user_ids:
                            reactions[uid] = reaction_id
        
        return reactions
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ–∞–∫—Ü–∏–π: {e}")
        return {}


def _format_vote_message(vk, target_id, votes_for_count, votes_against_count, time_left):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏."""
    try:
        user_info = vk.users.get(user_ids=target_id)[0]
        user_mention = f"[id{target_id}|{user_info['first_name']} {user_info['last_name']}]"
    except Exception as e:
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {target_id}: {e}")
        user_mention = f"[id{target_id}|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]"
    
    total_votes = votes_for_count + votes_against_count
    percentage = (votes_for_count / total_votes * 100) if total_votes > 0 else 0
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–µ–∞–∫—Ü–∏–π
    if REACTION_LIKE and REACTION_DISLIKE:
        reaction_info = f"–°—Ç–∞–≤—å—Ç–µ —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è!\n(–ü–µ—Ä–≤–∞—è —Ä–µ–∞–∫—Ü–∏—è = –ó–ê, –í—Ç–æ—Ä–∞—è = –ü–†–û–¢–ò–í)"
    else:
        reaction_info = "–°—Ç–∞–≤—å—Ç–µ —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è!"
    
    return f"""üî• –ì–û–õ–û–°–û–í–ê–ù–ò–ï –ó–ê –ë–ê–ù! üî•

–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_mention} –Ω–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω –Ω–∞ –±–∞–Ω.

üìä –¢–µ–∫—É—â–∏–π —Å—á—ë—Ç:
üëç –ó–ê: {votes_for_count}
üëé –ü–†–û–¢–ò–í: {votes_against_count}
üìà –ü–æ–¥–¥–µ—Ä–∂–∫–∞: {percentage:.0f}%

‚è± –û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏: {time_left} —Å–µ–∫.
üéØ –¢—Ä–µ–±—É–µ—Ç—Å—è: –º–∏–Ω–∏–º—É–º {MIN_VOTES} –≥–æ–ª–æ—Å–æ–≤ "–∑–∞" –∏ {int(VOTES_REQUIRED_PERCENTAGE * 100)}% –ø–æ–¥–¥–µ—Ä–∂–∫–∏

{reaction_info}"""


def start_ban_vote(vk, event):
    """
    –ù–∞—á–∏–Ω–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –ö–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–≥–æ, –∫–æ–≥–æ —Ö–æ—Ç—è—Ç –∑–∞–±–∞–Ω–∏—Ç—å.
    """
    # event - —ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    peer_id = event.get('peer_id')
    initiator_id = event.get('from_id')
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ reply_message
    if 'reply_message' not in event or not event['reply_message']:
        try:
            vk.messages.send(
                peer_id=peer_id,
                message="‚ùå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–≥–æ, –∫–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å.",
                random_id=get_random_id()
            )
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return
    
    target_id = event['reply_message'].get('from_id')
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    if not target_id:
        try:
            vk.messages.send(
                peer_id=peer_id,
                message="‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–∞–Ω–∞.",
                random_id=get_random_id()
            )
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return
        
    if target_id == initiator_id:
        try:
            vk.messages.send(
                peer_id=peer_id,
                message="ü§° –¢—ã –Ω–µ –º–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –±–∞–Ω —Å–∞–º–æ–≥–æ —Å–µ–±—è, —É–º–Ω–∏–∫.",
                random_id=get_random_id()
            )
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∞–¥–º–∏–Ω –ª–∏ —Ü–µ–ª—å
    target_user = get_or_create_user(target_id)
    if target_user.get('role') == 'admin':
        try:
            vk.messages.send(
                peer_id=peer_id,
                message="üö´ –ù–µ–ª—å–∑—è –∑–∞–±–∞–Ω–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –•–æ—Ä–æ—à–∞—è –ø–æ–ø—ã—Ç–∫–∞.",
                random_id=get_random_id()
            )
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
    if peer_id in ACTIVE_VOTES and target_id in ACTIVE_VOTES[peer_id]:
        existing_vote = ACTIVE_VOTES[peer_id][target_id]
        time_left = int(VOTE_DURATION - (time.time() - existing_vote['timestamp']))
        if time_left > 0:
            try:
                vk.messages.send(
                    peer_id=peer_id,
                    message=f"‚ö†Ô∏è –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –±–∞–Ω —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –∏–¥—ë—Ç! –û—Å—Ç–∞–ª–æ—Å—å {time_left} —Å–µ–∫—É–Ω–¥.",
                    random_id=get_random_id()
                )
            except Exception as e:
                logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            return
    
    # –°–æ–∑–¥–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ
    if peer_id not in ACTIVE_VOTES:
        ACTIVE_VOTES[peer_id] = {}
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ ID
    message_text = _format_vote_message(vk, target_id, 0, 0, VOTE_DURATION)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∞–∫—Ü–∏–∏, –µ—Å–ª–∏ –µ—â—ë –Ω–µ —Å–¥–µ–ª–∞–ª–∏
    init_reactions(vk)
    
    try:
        response = vk.messages.send(
            peer_id=peer_id,
            message=message_text,
            random_id=get_random_id()
        )
        message_id = response
        
        # –ü–æ–ª—É—á–∞–µ–º conversation_message_id –¥–ª—è –æ–ø—Ä–æ—Å–∞ —Ä–µ–∞–∫—Ü–∏–π
        try:
            msg_info = vk.messages.getById(message_ids=message_id)
            cmid = msg_info['items'][0]['conversation_message_id'] if msg_info and 'items' in msg_info else None
        except Exception as e:
            logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å conversation_message_id: {e}")
            cmid = None
        
        ACTIVE_VOTES[peer_id][target_id] = {
            'initiator': initiator_id,
            'votes_for': set(),
            'votes_against': set(),
            'timestamp': time.time(),
            'message_id': message_id,
            'conversation_message_id': cmid,
            'target_id': target_id
        }
        
        logging.info(f"–ù–∞—á–∞—Ç–æ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –±–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_id} –≤ —á–∞—Ç–µ {peer_id}, message_id: {message_id}, cmid: {cmid}")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è: {e}")


def update_votes_from_reactions(vk, peer_id, target_id):
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç –≥–æ–ª–æ—Å–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–∫—Ü–∏–π, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ API.
    """
    if peer_id not in ACTIVE_VOTES or target_id not in ACTIVE_VOTES[peer_id]:
        return
    
    vote_data = ACTIVE_VOTES[peer_id][target_id]
    cmid = vote_data.get('conversation_message_id')
    
    if not cmid:
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    reactions = get_message_reactions(vk, peer_id, cmid)
    
    # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –≥–æ–ª–æ—Å–∞
    vote_data['votes_for'].clear()
    vote_data['votes_against'].clear()
    
    # –ó–∞–ø–æ–ª–Ω—è–µ–º –Ω–æ–≤—ã–º–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–∫—Ü–∏–π
    for user_id, reaction_id in reactions.items():
        if reaction_id == REACTION_LIKE:
            vote_data['votes_for'].add(user_id)
        elif reaction_id == REACTION_DISLIKE:
            vote_data['votes_against'].add(user_id)
    
    logging.debug(f"–û–±–Ω–æ–≤–ª–µ–Ω—ã –≥–æ–ª–æ—Å–∞: {len(vote_data['votes_for'])} –∑–∞, {len(vote_data['votes_against'])} –ø—Ä–æ—Ç–∏–≤")


def update_vote_message(vk, peer_id, target_id):
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ–º, –æ—Ç–æ–±—Ä–∞–∂–∞—è —Ç–µ–∫—É—â–∏–π —Å—á—ë—Ç.
    """
    if peer_id not in ACTIVE_VOTES or target_id not in ACTIVE_VOTES[peer_id]:
        return
    
    vote_data = ACTIVE_VOTES[peer_id][target_id]
    message_id = vote_data.get('message_id')
    
    if not message_id:
        return
    
    time_elapsed = time.time() - vote_data['timestamp']
    time_left = max(0, int(VOTE_DURATION - time_elapsed))
    
    votes_for = len(vote_data['votes_for'])
    votes_against = len(vote_data['votes_against'])
    
    new_message = _format_vote_message(vk, target_id, votes_for, votes_against, time_left)
    
    try:
        vk.messages.edit(
            peer_id=peer_id,
            message_id=message_id,
            message=new_message
        )
    except Exception as e:
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è: {e}")


def check_and_finalize_votes(vk, peer_id):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –≤ —á–∞—Ç–µ –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ç–µ, —É –∫–æ—Ç–æ—Ä—ã—Ö –∏—Å—Ç–µ–∫–ª–æ –≤—Ä–µ–º—è.
    """
    if peer_id not in ACTIVE_VOTES:
        return
    
    current_time = time.time()
    votes_to_remove = []
    
    for target_id, vote_data in ACTIVE_VOTES[peer_id].items():
        time_elapsed = current_time - vote_data['timestamp']
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥, –µ—Å–ª–∏ –≤—Ä–µ–º—è –∏–¥—ë—Ç
        if time_elapsed < VOTE_DURATION:
            # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –≥–æ–ª–æ—Å–∞
            update_votes_from_reactions(vk, peer_id, target_id)
            # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–π–º–µ—Ä –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
            update_vote_message(vk, peer_id, target_id)
            continue
        
        # –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ
        votes_for = len(vote_data['votes_for'])
        votes_against = len(vote_data['votes_against'])
        total_votes = votes_for + votes_against
        message_id = vote_data.get('message_id')
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        try:
            user_info = vk.users.get(user_ids=target_id)[0]
            user_mention = f"[id{target_id}|{user_info['first_name']} {user_info['last_name']}]"
        except Exception as e:
            logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {target_id}: {e}")
            user_mention = f"[id{target_id}|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]"
        
        if votes_for >= MIN_VOTES and total_votes > 0:
            percentage_for = votes_for / total_votes
            
            if percentage_for >= VOTES_REQUIRED_PERCENTAGE:
                # –ë–ê–ù!
                try:
                    # –ü—ã—Ç–∞–µ–º—Å—è –∫–∏–∫–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞
                    vk.messages.removeChatUser(chat_id=peer_id - 2000000000, member_id=target_id)
                    
                    message = f"""üî® –í–ï–†–î–ò–ö–¢: –ë–ê–ù! üî®

{user_mention} –∏—Å–∫–ª—é—á—ë–Ω –∏–∑ —á–∞—Ç–∞ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.

üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:
üëç –ó–ê: {votes_for}
üëé –ü–†–û–¢–ò–í: {votes_against}
üìà –ü–æ–¥–¥–µ—Ä–∂–∫–∞: {int(percentage_for * 100)}%

–î–µ–º–æ–∫—Ä–∞—Ç–∏—è –ø–æ–±–µ–¥–∏–ª–∞! üéâ"""
                    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target_id} –∑–∞–±–∞–Ω–µ–Ω –≤ —á–∞—Ç–µ {peer_id} –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è")
                except vk_api.exceptions.ApiError as e:
                    logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∫–∏–∫–Ω—É—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_id}: {e}")
                    message = f"""‚ùå –û–®–ò–ë–ö–ê

–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å –≤ –ø–æ–ª—å–∑—É –±–∞–Ω–∞ ({votes_for} –∑–∞, {votes_against} –ø—Ä–æ—Ç–∏–≤), –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –∏—Å–∫–ª—é—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞. –í–æ–∑–º–æ–∂–Ω–æ, —É –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."""
            else:
                # –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
                message = f"""‚úÖ –í–ï–†–î–ò–ö–¢: –ù–ï –ë–ê–ù–ò–¢–¨

{user_mention} –æ—Å—Ç–∞—ë—Ç—Å—è –≤ —á–∞—Ç–µ.

üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:
üëç –ó–ê: {votes_for}
üëé –ü–†–û–¢–ò–í: {votes_against}
üìà –ü–æ–¥–¥–µ—Ä–∂–∫–∞: {int(percentage_for * 100)}% (—Ç—Ä–µ–±–æ–≤–∞–ª–æ—Å—å {int(VOTES_REQUIRED_PERCENTAGE * 100)}%)

–ù–∞—Ä–æ–¥ —Ä–µ—à–∏–ª –¥–∞—Ç—å –≤—Ç–æ—Ä–æ–π —à–∞–Ω—Å."""
        else:
            # –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≥–æ–ª–æ—Å–æ–≤
            message = f"""‚ùå –ì–û–õ–û–°–û–í–ê–ù–ò–ï –û–¢–ú–ï–ù–ï–ù–û

–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≥–æ–ª–æ—Å–æ–≤ –¥–ª—è –±–∞–Ω–∞ {user_mention}.

üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:
üëç –ó–ê: {votes_for} (—Ç—Ä–µ–±–æ–≤–∞–ª–æ—Å—å –º–∏–Ω–∏–º—É–º {MIN_VOTES})
üëé –ü–†–û–¢–ò–í: {votes_against}

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑, –µ—Å–ª–∏ —É–≤–µ—Ä–µ–Ω—ã."""
        
        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–∏–Ω–∞–ª—å–Ω—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
        if message_id:
            try:
                vk.messages.edit(
                    peer_id=peer_id,
                    message_id=message_id,
                    message=message
                )
            except Exception as e:
                logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º: {e}")
                # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ
                try:
                    vk.messages.send(peer_id=peer_id, message=message, random_id=get_random_id())
                except Exception as e2:
                    logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º: {e2}")
        else:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ ID –Ω–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω
            try:
                vk.messages.send(peer_id=peer_id, message=message, random_id=get_random_id())
            except Exception as e:
                logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º: {e}")
        
        votes_to_remove.append(target_id)
    
    # –£–¥–∞–ª—è–µ–º –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
    for target_id in votes_to_remove:
        del ACTIVE_VOTES[peer_id][target_id]
    
    # –ï—Å–ª–∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π –±–æ–ª—å—à–µ –Ω–µ—Ç, —É–¥–∞–ª—è–µ–º –∫–ª—é—á —á–∞—Ç–∞
    if not ACTIVE_VOTES[peer_id]:
        del ACTIVE_VOTES[peer_id]


def vote_command(vk, event, vote_type: str):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≥–æ–ª–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞ –∏–ª–∏ –ø—Ä–æ—Ç–∏–≤ –±–∞–Ω–∞.
    vote_type: '–∑–∞' –∏–ª–∏ '–ø—Ä–æ—Ç–∏–≤'
    """
    # event - —ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    peer_id = event.get('peer_id')
    voter_id = event.get('from_id')
    
    # –î–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è: –∏—â–µ–º –ª—é–±–æ–µ –∞–∫—Ç–∏–≤–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –≤ —ç—Ç–æ–º —á–∞—Ç–µ
    # –í –∏–¥–µ–∞–ª–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å, —á—Ç–æ —ç—Ç–æ –æ—Ç–≤–µ—Ç –∏–º–µ–Ω–Ω–æ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ–º
    if peer_id not in ACTIVE_VOTES or not ACTIVE_VOTES[peer_id]:
        send_message(vk, peer_id, "‚ùå –í —ç—Ç–æ–º —á–∞—Ç–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π –∑–∞ –±–∞–Ω.")
        return
    
    # –ë–µ—Ä—ë–º –ø–µ—Ä–≤–æ–µ –∞–∫—Ç–∏–≤–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ (—É–ø—Ä–æ—â–µ–Ω–∏–µ)
    target_id = list(ACTIVE_VOTES[peer_id].keys())[0]
    
    vote_data = ACTIVE_VOTES[peer_id][target_id]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≥–æ–ª–æ—Å–æ–≤–∞–ª –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if voter_id in vote_data['votes_for'] or voter_id in vote_data['votes_against']:
        send_message(vk, peer_id, "‚ö†Ô∏è –í—ã —É–∂–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏!")
        return
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≥–æ–ª–æ—Å
    if vote_type == '–∑–∞':
        vote_data['votes_for'].add(voter_id)
        emoji = "üëç"
    else:
        vote_data['votes_against'].add(voter_id)
        emoji = "üëé"
    
    votes_for = len(vote_data['votes_for'])
    votes_against = len(vote_data['votes_against'])
    
    send_message(vk, peer_id, f"{emoji} –í–∞—à –≥–æ–ª–æ—Å —É—á—Ç—ë–Ω! –¢–µ–∫—É—â–∏–π —Å—á—ë—Ç: {votes_for} –∑–∞, {votes_against} –ø—Ä–æ—Ç–∏–≤.")


def ban_vote_command(vk, event, args):
    """–ö–æ–º–∞–Ω–¥–∞ '–≠—Ç–æ–≥–æ –±–∞–Ω–∏–º –Ω–∞—Ö—É–π' - –Ω–∞—á–∏–Ω–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞ –±–∞–Ω."""
    start_ban_vote(vk, event)

