import re
import logging
from core.permissions import admin_required, check_admin_permissions
from core.utils import get_random_id, send_message, check_and_use_otp
from database import set_user_role, get_users_by_role, get_or_create_user
from core import cooldowns, sglypa
import vk_api.exceptions
import vk_api

def parse_user_id(text_mention: str) -> int | None:
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è '[id123|Name]' –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞."""
    match = re.search(r"\[id(\d+)\|.+\]", text_mention)
    if match:
        return int(match.group(1))
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç –ø—Ä–æ—Å—Ç–æ —á–∏—Å–ª–æ–º (ID)
    if text_mention.isdigit():
        return int(text_mention)
    return None

@admin_required
def sglypa_mode_command(vk, event, args):
    """–£–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ–∂–∏–º–æ–º –°–≥–ª—ã–ø—ã. –§–æ—Ä–º–∞—Ç: sdp sglypa [on|off|learn]"""
    if not args or args[0] not in ['on', 'off', 'learn']:
        send_message(vk, event.peer_id, "üìù –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `sdp sglypa [on|off|learn]`")
        return

    action = args[0]
    peer_id = event.peer_id

    if action == 'on':
        sglypa.SGLYPA_MODE_CHATS.add(peer_id)
        sglypa.save_sglypa_data()
        message = "‚úÖ –†–µ–∂–∏–º –°–≥–ª—ã–ø—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞."
    
    elif action == 'off':
        if peer_id in sglypa.SGLYPA_MODE_CHATS:
            sglypa.SGLYPA_MODE_CHATS.remove(peer_id)
            # –ü—Ä–∏ –≤—ã–∫–ª—é—á–µ–Ω–∏–∏ —Ä–µ–∂–∏–º–∞ –º–æ–∂–Ω–æ —Å—Ä–∞–∑—É –æ–±—É—á–∏—Ç—å—Å—è –Ω–∞ —Ç–æ–º, —á—Ç–æ –µ—Å—Ç—å –≤ –ø–∞–º—è—Ç–∏
            peer_id_str = str(peer_id)
            messages_to_learn = sglypa.MESSAGE_MEMORY.get(peer_id_str, [])
            if messages_to_learn:
                sglypa.build_model(peer_id, messages_to_learn)
            sglypa.save_sglypa_data()
            message = "üëΩ –†–µ–∂–∏–º –°–≥–ª—ã–ø—ã –≤—ã–∫–ª—é—á–µ–Ω. –Ø –∑–∞–ø–æ–º–Ω–∏–ª –≤—Å—ë, —á—Ç–æ –≤—ã —Ç—É—Ç –Ω–∞–ø–∏—Å–∞–ª–∏. –î–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á."
        else:
            message = "üëΩ –†–µ–∂–∏–º –°–≥–ª—ã–ø—ã —É–∂–µ –±—ã–ª –≤—ã–∫–ª—é—á–µ–Ω."
    else:
        message = "–ù–µ–≤–µ—Ä–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'on' –∏–ª–∏ 'off'."

    send_message(vk, peer_id, message)


@admin_required
def set_cooldown_command(vk, event, args):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫—É–ª–¥–∞—É–Ω –¥–ª—è –∫–æ–º–∞–Ω–¥—ã. –§–æ—Ä–º–∞—Ç: sdp setcd <–∫–æ–º–∞–Ω–¥–∞> <—Å–µ–∫—É–Ω–¥—ã>"""
    if len(args) != 2:
        send_message(vk, event.peer_id, "üìù –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `sdp setcd <–∫–æ–º–∞–Ω–¥–∞> <—Å–µ–∫—É–Ω–¥—ã>`\n–ù–∞–ø—Ä–∏–º–µ—Ä: `sdp setcd gif 60`")
        return

    command, time_str = args
    try:
        seconds = int(time_str)
        if seconds < 0:
            raise ValueError
    except ValueError:
        send_message(vk, event.peer_id, "üö´ –í—Ä–µ–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —Ü–µ–ª—ã–º —á–∏—Å–ª–æ–º.")
        return
    
    cooldowns.COMMAND_COOLDOWNS[command] = seconds
    cooldowns.save_cooldown_settings()

    if seconds == 0:
        message = f"‚úÖ –ö—É–ª–¥–∞—É–Ω –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `{command}` –±—ã–ª —É–±—Ä–∞–Ω."
    else:
        message = f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫—É–ª–¥–∞—É–Ω –¥–ª—è –∫–æ–º–∞–Ω–¥—ã `{command}`: {seconds} —Å–µ–∫."

    send_message(vk, event.peer_id, message)


@admin_required
def list_cooldowns_command(vk, event, args):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫—É–ª–¥–∞—É–Ω–æ–≤."""
    
    # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    cooldowns.load_cooldown_settings()

    if not cooldowns.COMMAND_COOLDOWNS:
        message = "‚ÑπÔ∏è –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∫—É–ª–¥–∞—É–Ω–∞."
    else:
        message = "‚öôÔ∏è –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫—É–ª–¥–∞—É–Ω–æ–≤:\n\n"
        for command, seconds in cooldowns.COMMAND_COOLDOWNS.items():
            if seconds > 0: # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –∫—É–ª–¥–∞—É–Ω
                message += f"üîπ `{command}`: {seconds} —Å–µ–∫.\n"
    
    message += "\n‚ÑπÔ∏è –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∫—É–ª–¥–∞—É–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π `setcd`."

    send_message(vk, event.peer_id, message)


def set_role_command(vk, event, args, role_to_set: str, role_name: str):
    """–û–±—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ä–æ–ª–∏."""
    if not args:
        send_message(vk, event.peer_id, f"‚ùì –£–∫–∞–∂–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü—Ä–∏–º–µ—Ä: sdp –¥–∞—Ç—å–∞–¥–º–∏–Ω–∫—É [id123|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]")
        return

    target_id = parse_user_id(args[0])
    if not target_id:
        send_message(vk, event.peer_id, f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return
        
    try:
        # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Ü–µ–ª–µ–≤–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ë–î
        get_or_create_user(target_id)
        set_user_role(target_id, role_to_set)
        send_message(vk, event.peer_id, f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é [id{target_id}|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] –≤—ã–¥–∞–Ω—ã –ø—Ä–∞–≤–∞ '{role_name}'.")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Ä–æ–ª–∏ –¥–ª—è {target_id}: {e}")
        send_message(vk, event.peer_id, f"‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–æ–ª–∏.")

def promote_to_admin(vk, event, args):
    """–ù–∞–∑–Ω–∞—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."""
    set_role_command(vk, event, args, role_to_set='admin', role_name='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä')

def demote_to_user(vk, event, args):
    """–°–Ω–∏–º–∞–µ—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."""
    set_role_command(vk, event, args, role_to_set='user', role_name='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')

@admin_required
def show_admins(vk, event, args):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤."""
    try:
        admin_ids = get_users_by_role('admin')
        if not admin_ids:
            message = "–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –ø—É—Å—Ç."
        else:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –æ—Ç VK API
            users_info = vk.users.get(user_ids=','.join(map(str, admin_ids)))
            
            admin_mentions = []
            for user in users_info:
                # –°–æ–∑–¥–∞–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤–∏–¥–∞ [id123|–ò–º—è –§–∞–º–∏–ª–∏—è]
                admin_mentions.append(f"[id{user['id']}|{user['first_name']} {user['last_name']}]")
            
            message = "–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:\n" + "\n".join(admin_mentions)
        
        send_message(vk, event.peer_id, message)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–æ–≤: {e}")
        send_message(vk, event.peer_id, "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.")


@admin_required
def autism_command(vk, event, args):
    """–í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç —Ä–µ–∂–∏–º –ê—É—Ç–∏–∑–º–∞ –¥–ª—è –°–≥–ª—ã–ø—ã –≤ —Ç–µ–∫—É—â–µ–º —á–∞—Ç–µ."""
    peer_id = event.peer_id
    if peer_id in sglypa.AUTISM_MODE_CHATS:
        sglypa.AUTISM_MODE_CHATS.remove(peer_id)
        message = "–†–µ–∂–∏–º –ê—É—Ç–∏–∑–º–∞ –¥–ª—è –°–≥–ª—ã–ø—ã –í–´–ö–õ–Æ–ß–ï–ù. (¬¥-œâ-`)"
    else:
        sglypa.AUTISM_MODE_CHATS.add(peer_id)
        message = "–†–µ–∂–∏–º –ê—É—Ç–∏–∑–º–∞ –¥–ª—è –°–≥–ª—ã–ø—ã –í–ö–õ–Æ–ß–ï–ù. (^œâ^)"
    
    sglypa.save_sglypa_data()
    send_message(vk, peer_id, message)

def otp_command(vk, event, args):
    """
    –°–µ–∫—Ä–µ—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
    –ú–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑.
    –§–æ—Ä–º–∞—Ç: sdp otp <—Å–µ–∫—Ä–µ—Ç–Ω—ã–π_—Ç–æ–∫–µ–Ω>
    """
    if not args:
        send_message(vk, event.peer_id, "üîê –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `sdp otp <—Ç–æ–∫–µ–Ω>`")
        return
    
    token = " ".join(args)
    user_id = event.user_id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º OTP —Ç–æ–∫–µ–Ω
    if check_and_use_otp(token):
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        get_or_create_user(user_id)  # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ë–î
        set_user_role(user_id, 'admin')
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        try:
            user_info = vk.users.get(user_ids=user_id)[0]
            user_name = f"{user_info.get('first_name', '')} {user_info.get('last_name', '')}".strip()
            if not user_name:
                user_name = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}"
        except Exception as e:
            logging.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {user_id}: {e}")
            user_name = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}"
        
        message = (
            f"üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! {user_name} –ø–æ–ª—É—á–∏–ª –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!\n\n"
            f"üîë OTP —Ç–æ–∫–µ–Ω –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.\n"
            f"‚ö° –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã."
        )
        
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} ({user_name}) –ø–æ–ª—É—á–∏–ª –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ OTP")
        
    else:
        message = "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –∏–ª–∏ —Ç–æ–∫–µ–Ω —É–∂–µ –±—ã–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω."
        logging.warning(f"–ù–µ—É–¥–∞—á–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è OTP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id}")
    
    send_message(vk, event.peer_id, message)

# === –ö–û–ú–ê–ù–î–´ –ú–û–î–ï–†–ê–¶–ò–ò ===

def mute_command(vk, event, args):
    """–ó–∞–≥–ª—É—à–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è. –§–æ—Ä–º–∞—Ç: sdp –º—É—Ç [id|@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] [–≤—Ä–µ–º—è] [–ø—Ä–∏—á–∏–Ω–∞]"""
    if not check_admin_permissions(vk, event.user_id, event.peer_id):
        return
    
    if len(args) < 2:
        send_message(vk, event.peer_id, "üìù –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `sdp –º—É—Ç [id|@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] [–≤—Ä–µ–º—è] [–ø—Ä–∏—á–∏–Ω–∞]`\n–ü—Ä–∏–º–µ—Ä: `sdp –º—É—Ç [id123|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] 1—á –°–ø–∞–º`")
        return

    target_id = parse_user_id(args[0])
    if not target_id:
        send_message(vk, event.peer_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return

    # –ü–∞—Ä—Å–∏–º –≤—Ä–µ–º—è (1—á, 30–º, 1–¥)
    time_str = args[1]
    reason = " ".join(args[2:]) if len(args) > 2 else "–ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª"
    
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥–ª—É—à–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        vk.messages.removeChatUser(chat_id=event.peer_id - 2000000000, user_id=target_id)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ —á–µ—Ä–µ–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è (—ç—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è)
        # –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–Ω–æ –±—ã–ª–æ –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á
        
        message = f"üîá –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [id{target_id}|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] –∑–∞–≥–ª—É—à–µ–Ω –Ω–∞ {time_str}.\nüìù –ü—Ä–∏—á–∏–Ω–∞: {reason}"
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target_id} –∑–∞–≥–ª—É—à–µ–Ω –≤ —á–∞—Ç–µ {event.peer_id} –Ω–∞ {time_str}. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
        
    except vk_api.exceptions.ApiError as e:
        if e.code == 15:  # Access denied
            message = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏."
        elif e.code == 935:  # User not in chat
            message = "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —á–∞—Ç–µ."
        else:
            message = f"‚ùå –û—à–∏–±–∫–∞ VK API: {e}"
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥–ª—É—à–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_id}: {e}")
    
    send_message(vk, event.peer_id, message)

def unmute_command(vk, event, args):
    """–°–Ω–∏–º–∞–µ—Ç –∑–∞–≥–ª—É—à–µ–Ω–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –§–æ—Ä–º–∞—Ç: sdp —Ä–∞–∑–º—É—Ç [id|@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]"""
    if not check_admin_permissions(vk, event.user_id, event.peer_id):
        return
    
    if not args:
        send_message(vk, event.peer_id, "üìù –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `sdp —Ä–∞–∑–º—É—Ç [id|@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]`")
        return

    target_id = parse_user_id(args[0])
    if not target_id:
        send_message(vk, event.peer_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return

    try:
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±—Ä–∞—Ç–Ω–æ –≤ —á–∞—Ç
        vk.messages.addChatUser(chat_id=event.peer_id - 2000000000, user_id=target_id)
        
        message = f"üîä –ó–∞–≥–ª—É—à–µ–Ω–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è [id{target_id}|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] —Å–Ω—è—Ç–æ."
        logging.info(f"–ó–∞–≥–ª—É—à–µ–Ω–∏–µ —Å–Ω—è—Ç–æ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_id} –≤ —á–∞—Ç–µ {event.peer_id}")
        
    except vk_api.exceptions.ApiError as e:
        if e.code == 15:  # Access denied
            message = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏."
        elif e.code == 936:  # User already in chat
            message = "‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ —á–∞—Ç–µ."
        else:
            message = f"‚ùå –û—à–∏–±–∫–∞ VK API: {e}"
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ –∑–∞–≥–ª—É—à–µ–Ω–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_id}: {e}")
    
    send_message(vk, event.peer_id, message)

def kick_command(vk, event, args):
    """–ò—Å–∫–ª—é—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞. –§–æ—Ä–º–∞—Ç: sdp –∫–∏–∫ [id|@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] [–ø—Ä–∏—á–∏–Ω–∞]"""
    if not check_admin_permissions(vk, event.user_id, event.peer_id):
        return
    
    if not args:
        send_message(vk, event.peer_id, "üìù –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `sdp –∫–∏–∫ [id|@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] [–ø—Ä–∏—á–∏–Ω–∞]`")
        return

    target_id = parse_user_id(args[0])
    if not target_id:
        send_message(vk, event.peer_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return

    reason = " ".join(args[1:]) if len(args) > 1 else "–ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª"
    
    try:
        vk.messages.removeChatUser(chat_id=event.peer_id - 2000000000, user_id=target_id)
        
        message = f"üë¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [id{target_id}|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ —á–∞—Ç–∞.\nüìù –ü—Ä–∏—á–∏–Ω–∞: {reason}"
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target_id} –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ —á–∞—Ç–∞ {event.peer_id}. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
        
    except vk_api.exceptions.ApiError as e:
        if e.code == 15:  # Access denied
            message = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏."
        elif e.code == 935:  # User not in chat
            message = "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —á–∞—Ç–µ."
        else:
            message = f"‚ùå –û—à–∏–±–∫–∞ VK API: {e}"
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_id}: {e}")
    
    send_message(vk, event.peer_id, message)

def ban_command(vk, event, args):
    """–ë–∞–Ω–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø–µ. –§–æ—Ä–º–∞—Ç: sdp –±–∞–Ω [id|@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] [–ø—Ä–∏—á–∏–Ω–∞]"""
    if not check_admin_permissions(vk, event.user_id, event.peer_id):
        return
    
    if not args:
        send_message(vk, event.peer_id, "üìù –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `sdp –±–∞–Ω [id|@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] [–ø—Ä–∏—á–∏–Ω–∞]`")
        return

    target_id = parse_user_id(args[0])
    if not target_id:
        send_message(vk, event.peer_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return

    reason = " ".join(args[1:]) if len(args) > 1 else "–ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª"
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º ID –≥—Ä—É–ø–ø—ã –∏–∑ peer_id
        group_id = abs(event.peer_id - 2000000000)
        vk.groups.ban(group_id=group_id, owner_id=target_id, reason=0, comment=reason)
        
        message = f"üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [id{target_id}|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] –∑–∞–±–∞–Ω–µ–Ω –≤ –≥—Ä—É–ø–ø–µ.\nüìù –ü—Ä–∏—á–∏–Ω–∞: {reason}"
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target_id} –∑–∞–±–∞–Ω–µ–Ω –≤ –≥—Ä—É–ø–ø–µ. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
        
    except vk_api.exceptions.ApiError as e:
        if e.code == 15:  # Access denied
            message = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏."
        else:
            message = f"‚ùå –û—à–∏–±–∫–∞ VK API: {e}"
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –±–∞–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_id}: {e}")
    
    send_message(vk, event.peer_id, message)

@admin_required
def unban_command(vk, event, args):
    """–†–∞–∑–±–∞–Ω–∏–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø–µ. –§–æ—Ä–º–∞—Ç: sdp —Ä–∞–∑–±–∞–Ω [id|@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]"""
    if not args:
        send_message(vk, event.peer_id, "üìù –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `sdp —Ä–∞–∑–±–∞–Ω [id|@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]`")
        return

    target_id = parse_user_id(args[0])
    if not target_id:
        send_message(vk, event.peer_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return

    try:
        # –ü–æ–ª—É—á–∞–µ–º ID –≥—Ä—É–ø–ø—ã –∏–∑ peer_id
        group_id = abs(event.peer_id - 2000000000)
        vk.groups.unban(group_id=group_id, owner_id=target_id)
        
        message = f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [id{target_id}|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] —Ä–∞–∑–±–∞–Ω–µ–Ω –≤ –≥—Ä—É–ø–ø–µ."
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {target_id} —Ä–∞–∑–±–∞–Ω–µ–Ω –≤ –≥—Ä—É–ø–ø–µ")
        
    except vk_api.exceptions.ApiError as e:
        if e.code == 15:  # Access denied
            message = "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏."
        else:
            message = f"‚ùå –û—à–∏–±–∫–∞ VK API: {e}"
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–∞–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_id}: {e}")
    
    send_message(vk, event.peer_id, message)

@admin_required
def warn_command(vk, event, args):
    """–í—ã–¥–∞–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é. –§–æ—Ä–º–∞—Ç: sdp –≤–∞—Ä–Ω [id|@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] [–ø—Ä–∏—á–∏–Ω–∞]"""
    if not args:
        send_message(vk, event.peer_id, "üìù –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `sdp –≤–∞—Ä–Ω [id|@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] [–ø—Ä–∏—á–∏–Ω–∞]`")
        return

    target_id = parse_user_id(args[0])
    if not target_id:
        send_message(vk, event.peer_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return

    reason = " ".join(args[1:]) if len(args) > 1 else "–ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª"
    
    message = f"‚ö†Ô∏è [id{target_id}|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å], –≤–∞–º –≤—ã–¥–∞–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ!\nüìù –ü—Ä–∏—á–∏–Ω–∞: {reason}\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ —á–∞—Ç–∞."
    logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {target_id} –≤—ã–¥–∞–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ. –ü—Ä–∏—á–∏–Ω–∞: {reason}")
    
    send_message(vk, event.peer_id, message)

@admin_required
def clear_command(vk, event, args):
    """–û—á–∏—â–∞–µ—Ç —á–∞—Ç –æ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π (—É–¥–∞–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ N —Å–æ–æ–±—â–µ–Ω–∏–π). –§–æ—Ä–º–∞—Ç: sdp –æ—á–∏—Å—Ç–∏—Ç—å [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]"""
    if not args:
        send_message(vk, event.peer_id, "üìù –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `sdp –æ—á–∏—Å—Ç–∏—Ç—å [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]`\n–ü—Ä–∏–º–µ—Ä: `sdp –æ—á–∏—Å—Ç–∏—Ç—å 10`")
        return

    try:
        count = int(args[0])
        if count <= 0 or count > 100:
            send_message(vk, event.peer_id, "‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 100.")
            return
    except ValueError:
        send_message(vk, event.peer_id, "‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π.")
        return

    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        messages = vk.messages.getHistory(peer_id=event.peer_id, count=count)
        
        deleted_count = 0
        for message in messages['items']:
            try:
                vk.messages.delete(message_ids=message['id'], delete_for_all=1)
                deleted_count += 1
            except:
                pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        
        message = f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ {deleted_count} –∏–∑ {count} —Å–æ–æ–±—â–µ–Ω–∏–π."
        logging.info(f"–£–¥–∞–ª–µ–Ω–æ {deleted_count} —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ {event.peer_id}")
        
    except vk_api.exceptions.ApiError as e:
        message = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —á–∞—Ç–∞: {e}"
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —á–∞—Ç–∞ {event.peer_id}: {e}")
    
    send_message(vk, event.peer_id, message)

@admin_required
def info_command(vk, event, args):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ. –§–æ—Ä–º–∞—Ç: sdp –∏–Ω—Ñ–æ [id|@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]"""
    if not args:
        send_message(vk, event.peer_id, "üìù –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `sdp –∏–Ω—Ñ–æ [id|@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]`")
        return

    target_id = parse_user_id(args[0])
    if not target_id:
        send_message(vk, event.peer_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return

    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_info = vk.users.get(user_ids=target_id, fields='online,last_seen,status')[0]
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –≤ –±–æ—Ç–µ
        user_role = get_or_create_user(target_id).get('role', 'user')
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        name = f"{user_info.get('first_name', '')} {user_info.get('last_name', '')}".strip()
        online = "üü¢ –í —Å–µ—Ç–∏" if user_info.get('online') else "üî¥ –ù–µ –≤ —Å–µ—Ç–∏"
        
        last_seen = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        if user_info.get('last_seen'):
            last_seen = f"–ü–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑: {user_info['last_seen'].get('time', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}"
        
        status = user_info.get('status', '–°—Ç–∞—Ç—É—Å –Ω–µ —É–∫–∞–∑–∞–Ω')
        
        message = (
            f"üë§ **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ**\n\n"
            f"üìù –ò–º—è: {name}\n"
            f"üÜî ID: {target_id}\n"
            f"üîê –†–æ–ª—å –≤ –±–æ—Ç–µ: {user_role}\n"
            f"üìä –°—Ç–∞—Ç—É—Å: {online}\n"
            f"‚è∞ {last_seen}\n"
            f"üí¨ –°—Ç–∞—Ç—É—Å: {status}"
        )
        
    except vk_api.exceptions.ApiError as e:
        message = f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏: {e}"
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {target_id}: {e}")
    
    send_message(vk, event.peer_id, message)
