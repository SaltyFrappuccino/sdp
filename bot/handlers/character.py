import json
import logging
from core.permissions import admin_required
from core.utils import get_random_id
from core.backend_api import (
    get_characters_by_vk_id, 
    find_character,
    # update_character_data # –ü–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º
)

# --- –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤ ---

def my_characters(vk, event, args):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –∫ VK ID –∏–≥—Ä–æ–∫–∞, —á–µ—Ä–µ–∑ API."""
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫ API
        chars = get_characters_by_vk_id(event.user_id)
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ª—É—á–∞–π, –∫–æ–≥–¥–∞ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É
        if chars is None:
            vk.messages.send(peer_id=event.peer_id, message="‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º –∞–Ω–∫–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", random_id=get_random_id())
            return

        if not chars:
            message = "‚ùå –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º '–ü—Ä–∏–Ω—è—Ç–æ'."
        else:
            message = "üé≠ –í–∞—à–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏:\n"
            for char in chars:
                # –ü–æ–ª—è –º–æ–≥—É—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è, –±–µ—Ä–µ–º –∏–∑ –æ—Ç–≤–µ—Ç–∞ API
                message += f"‚Ä¢ ID: {char.get('id')} | {char.get('character_name')} (–†–∞–Ω–≥: {char.get('rank', 'N/A')}, –°—Ç–∞—Ç—É—Å: {char.get('status', 'N/A')})\n"
        
        vk.messages.send(peer_id=event.peer_id, message=message, random_id=get_random_id())
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –¥–ª—è vk_id {event.user_id}: {e}")
        vk.messages.send(peer_id=event.peer_id, message="‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ –±–æ—Ç–∞.", random_id=get_random_id())

def character_info(vk, event, args):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–µ –ø–æ –µ–≥–æ ID –∏–ª–∏ –∏–º–µ–Ω–∏ —á–µ—Ä–µ–∑ API."""
    if not args:
        vk.messages.send(peer_id=event.peer_id, message="‚ùì –£–∫–∞–∂–∏—Ç–µ ID –∏–ª–∏ –∏–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.", random_id=get_random_id())
        return

    identifier = " ".join(args)
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫ API
        char = find_character(identifier)

        if char is None:
             vk.messages.send(peer_id=event.peer_id, message="‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º –∞–Ω–∫–µ—Ç –∏–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω.", random_id=get_random_id())
             return

        # attributes –∏ aura_cells —Ç–µ–ø–µ—Ä—å –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–±—ä–µ–∫—Ç–∞–º–∏, –∞ –Ω–µ JSON-—Å—Ç—Ä–æ–∫–∞–º–∏
        attributes = char.get('attributes', {})
        aura_cells = char.get('aura_cells', {})
        
        attr_str = ", ".join([f"{k}: {v}" for k, v in attributes.items()]) if attributes else "–ù–µ—Ç"
        cells_str = ", ".join([f"{k}: {v}" for k, v in aura_cells.items()]) if aura_cells else "–ù–µ—Ç"

        message = (
            f"üë§ –ü–µ—Ä—Å–æ–Ω–∞–∂: {char.get('character_name', 'N/A')} (ID: {char.get('id', 'N/A')})\n"
            f"üí∞ –ö—Ä–µ–¥–∏—Ç—ã: {char.get('currency', 0)} ‚Ç≠\n"
            f"üí™ –ê—Ç—Ä–∏–±—É—Ç—ã: {attr_str}\n"
            f"‚ú® –Ø—á–µ–π–∫–∏ –∞—É—Ä—ã: {cells_str}"
        )
        
        vk.messages.send(peer_id=event.peer_id, message=message, random_id=get_random_id())
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ '{identifier}': {e}")
        vk.messages.send(peer_id=event.peer_id, message="‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ –±–æ—Ç–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.", random_id=get_random_id())

# --- –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ ---

# @admin_required
# def set_currency(vk, event, args):
#     """
#     (–í–†–ï–ú–ï–ù–ù–û –û–¢–ö–õ–Æ–ß–ï–ù–û)
#     –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ—Ç –∏–ª–∏ –≤—ã—á–∏—Ç–∞–µ—Ç –∫—Ä–µ–¥–∏—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–∂—É.
#     """
#     vk.messages.send(peer_id=event.peer_id, message="‚ö†Ô∏è –ö–æ–º–∞–Ω–¥–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–∞ –¥–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ API-–∫–ª—é—á–∞.", random_id=get_random_id())
